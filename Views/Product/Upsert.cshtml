@model deAndrade_Project_III.Models.UpsertProductModel
@{
    ViewBag.Title = " - Products";
}

<h2><span id="title"></span> Product</h2>

@using (Html.BeginForm("Upsert", "Product", FormMethod.Post))
{


<div class="upsert-container">
    <div class="no-collapsing">
        <div class="form-title"><span class="theader">Product Code</span></div>
        <div class="form-field">
            @if (Model.IsNull())
            {
                @Html.TextBoxFor(gm => gm.Product.ProductCode, new { @class = "form-control", @maxlenght= "10", placeholder = "Product Code" })
            }
            else
            {
                @Html.HiddenFor(gm => gm.Product.ProductCode)
                @Model.Product.ProductCode.Trim();
            }
        </div>
    </div>

    <div><hr /></div>
    <div class="no-collapsing">
        <div class="form-title"><span class="theader">Description</span></div>
        <div class="form-field">
            @Html.TextBoxFor(gm => gm.Product.Description, new { @class = "form-control", placeholder = "Description" })
        </div>
    </div>

    <div><hr /></div>
    <div class="no-collapsing">
        <div class="form-title"><span class="theader">Unit Price</span></div>
        <div class="form-field">
            @Html.TextBoxFor(gm => gm.Product.UnitPrice, "{0:n2}", new { @class = "form-control", @type = "number", @step = ".01", placeholder = "Unit Price" })
        </div>
    </div>

    <div><hr /></div>
    <div class="no-collapsing">
        <div class="form-title"><span class="theader">On Hand Quantity</span></div>
        <div class="form-field">
            @Html.TextBoxFor(gm => gm.Product.OnHandQuantity, new { @class = "form-control", @type = "number", placeholder = "On Hand Quantity" })
        </div>
    </div>
</div>
<div class="align-content-center">
    <input type="submit" value="Submit" class="btn btn-default" />
    <input type="button" value="Back to the list" onclick="new Book().Back();" class="btn btn-default" />
    @if (!Model.IsNull())
    {
        <input type="button" value="Delete" onclick="new Book().ApiHandler('DELETE', '@Model.Product.ProductCode.Trim()');" class="btn btn-danger" />
    }
</div>
}